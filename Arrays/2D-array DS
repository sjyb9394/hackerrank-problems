#include <bits/stdc++.h>

using namespace std;

// Complete the hourglassSum function below.
// My Code
int sum(vector<vector<int>> arr,int x, int y){
    int sum = 0;
    for(int i = x; i<= x+2;i++){
        for(int j = y; j<=y+2;j++){
            if(i!=x+1){
                sum+= arr[i][j];
            }
        }
    }
    
    return (sum+arr[x+1][y+1]);
}

int hourglassSum(vector<vector<int>> arr) {
    int max = -9999;
    int temp = 0;
    
    for(int i = 0; i<arr.size()-2;i++){
        for(int j = 0; j<arr[i].size()-2;j++){
            temp = sum(arr, i, j);
            max = temp >= max ? temp : max; 
        }
    }

    return max;
}

//Given from here
int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    vector<vector<int>> arr(6);
    for (int i = 0; i < 6; i++) {
        arr[i].resize(6);

        for (int j = 0; j < 6; j++) {
            cin >> arr[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    int result = hourglassSum(arr);

    fout << result << "\n";

    fout.close();

    return 0;
}
