#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

//Code
class Person{
    public:
        string name;
        int age;
    public:
        virtual void getdata(){}; //virtual function to use inherited class method
        virtual void putdata(){}; //virtual functions to use inherited class method
};

class Professor : public Person{
    int publications;
    int cur_id;
    static int id;
    
    public:
        Professor(){
            this->cur_id = ++id;
        }
        void getdata(){
            cin>>name;
            cin>>age;
            cin>>publications;
        }
        void putdata(){
            cout<<name<<" "<<age<<" "<<publications<<" "<<cur_id<<endl;
        }
};
int Professor::id = 0;

class Student : public Person{
    int marks[6];
    int cur_id;
    static int id;
    
    public:
    int sum = 0;
    Student(){
        this->cur_id = ++id;
    }
    void getdata(){
        cin>>name;
        cin>>age;
        
        for(int i = 0; i<6;i++){
            cin>>marks[i];
            sum+=marks[i];
        }
    }
    void putdata(){
        cout<<name<<" "<<age<<" "<<sum<<" "<<cur_id<<endl;
    }
};
int Student::id = 0;

//Given
int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;

}
